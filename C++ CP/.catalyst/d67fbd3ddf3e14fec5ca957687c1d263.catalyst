{"title":{"en":"A. Subsequence Permutation","ru":"A. Перестановка подпоследовательности"},"contestId":"1552","problemIndex":"A","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>A string $$$s$$$ of length $$$n$$$, consisting of lowercase letters of the English alphabet, is given.</p><p>You must choose some number $$$k$$$ between $$$0$$$ and $$$n$$$. Then, you select $$$k$$$ characters of $$$s$$$ and permute them however you want. In this process, the positions of the other $$$n-k$$$ characters remain unchanged. You have to perform this operation exactly once.</p><p>For example, if $$$s=\\texttt{\"andrea\"}$$$, you can choose the $$$k=4$$$ characters $$$\\texttt{\"a_d_ea\"}$$$ and permute them into $$$\\texttt{\"d_e_aa\"}$$$ so that after the operation the string becomes $$$\\texttt{\"dneraa\"}$$$.</p><p>Determine the minimum $$$k$$$ so that it is possible to sort $$$s$$$ alphabetically (that is, after the operation its characters appear in alphabetical order).</p>","ru":"<p>Дана строка $$$s$$$ длины $$$n$$$, состоящая из строчных букв английского алфавита.</p><p>Вы должны выбрать некоторое число $$$k$$$ между $$$0$$$ и $$$n$$$. Затем вы выбираете некоторые $$$k$$$ символов $$$s$$$ и переставляете их как угодно. При этом позиции остальных символов $$$n-k$$$ остаются неизменными. Эту операцию нужно выполнить ровно один раз.</p><p>Например, если $$$s=\\texttt{\"andrea\"}$$$, то можно выбрать $$$k=4$$$ символов $$$\\texttt{\"a_d_ea\"}$$$ и переставить их в порядке $$$\\texttt{\"d_e_aa\"}$$$ так, чтобы после операции строка стала $$$\\texttt{\"dneraa\"}$$$.</p><p>Определите минимально возможное значение $$$k$$$, выбрав которое можно отсортировать $$$s$$$ в алфавитном порядке (то есть, чтобы после операции ее символы располагались в алфавитном порядке).</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. Then $$$t$$$ test cases follow.</p><p>The first line of each test case contains one integer $$$n$$$ ($$$1 \\le n \\le 40$$$) — the length of the string.</p><p>The second line of each test case contains the string $$$s$$$. It is guaranteed that $$$s$$$ contains only lowercase letters of the English alphabet.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Первая строка содержит одно целое число $$$t$$$ ($$$1 \\le t \\le 1000$$$) — количество наборов входных данных. Затем следуют $$$t$$$ наборов входных данных.</p><p>Первая строка каждого набора входных данных содержит одно целое число $$$n$$$ ($$$1 \\le n \\le 40$$$) — длину строки.</p><p>Вторая строка каждого набора входных данных содержит строку $$$s$$$. Гарантируется, что $$$s$$$ содержит только строчные буквы английского алфавита.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, output the minimum $$$k$$$ that allows you to obtain a string sorted alphabetically, through the operation described above.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите минимальное значение $$$k$$$, которое позволяет получить строку, отсортированную по алфавиту, с помощью операции, описанной выше.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the <span class=\"tex-font-style-bf\">first test case</span>, we can choose the $$$k=2$$$ characters $$$\\texttt{\"_ol\"}$$$ and rearrange them as $$$\\texttt{\"_lo\"}$$$ (so the resulting string is $$$\\texttt{\"llo\"}$$$). It is not possible to sort the string choosing strictly less than $$$2$$$ characters.</p><p>In the <span class=\"tex-font-style-bf\">second test case</span>, one possible way to sort $$$s$$$ is to consider the $$$k=6$$$ characters $$$\\texttt{\"_o__force_\"}$$$ and rearrange them as $$$\\texttt{\"_c__efoor_\"}$$$ (so the resulting string is $$$\\texttt{\"ccdeefoors\"}$$$). One can show that it is not possible to sort the string choosing strictly less than $$$6$$$ characters.</p><p>In the <span class=\"tex-font-style-bf\">third test case</span>, string $$$s$$$ is already sorted (so we can choose $$$k=0$$$ characters).</p><p>In the <span class=\"tex-font-style-bf\">fourth test case</span>, we can choose all $$$k=4$$$ characters $$$\\texttt{\"dcba\"}$$$ and reverse the whole string (so the resulting string is $$$\\texttt{\"abcd\"}$$$).</p>","ru":"<div class=\"section-title\">Примечание</div><p>В <span class=\"tex-font-style-bf\">первом наборе входных данных</span> мы можем выбрать $$$k=2$$$ символа $$$\\texttt{\"_ol\"}$$$ и переставить их как $$$\\texttt{\"_lo\"}$$$ (так что результирующая строка будет $$$\\texttt{\"llo\"}$$$). Невозможно отсортировать строку, выбирая строго менее $$$2$$$ символов.</p><p>Во <span class=\"tex-font-style-bf\">втором наборе входных данных</span> одним из возможных способов сортировки $$$s$$$ является рассмотрение $$$k=6$$$ символов $$$\\texttt{\"_o__force_\"}$$$ и перестановка их как $$$\\texttt{\"_c__efoor_\"}$$$ (так что результирующая строка будет $$$\\texttt{\"ccdeefoors\"}$$$). Можно показать, что невозможно отсортировать строку, выбирая строго меньше $$$6$$$ символов.</p><p>В <span class=\"tex-font-style-bf\">третьем наборе входных данных</span>, строка $$$s$$$ уже отсортирована (поэтому мы можем выбрать $$$k=0$$$ символов).</p><p>В <span class=\"tex-font-style-bf\">четвертом наборе входных данных</span> мы можем выбрать все $$$k=4$$$ символов $$$\\texttt{\"dcba\"}$$$ и перевернуть всю строку (так что результирующая строка будет $$$\\texttt{\"abcd\"}$$$).</p>"},"sampleTestcases":[{"id":1658396740467,"input":"4\n3\nlol\n10\ncodeforces\n5\naaaaa\n4\ndcba\n","output":"2\n6\n0\n4\n","result":{"id":1658396740467,"stdout":"2\r\n6\r\n0\r\n4\r\n","stderr":"","exitcode":0,"signal":null,"time":88,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++","langId":"50"}